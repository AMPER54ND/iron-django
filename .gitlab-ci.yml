stages:
  - test
  - build
  - validate
  - plan
  - apply

pylint:
  image: python:3
  stage: test
  allow_failure: true
  script:
    - pip install pylint
    - pip install -r ${CI_PROJECT_DIR}/requirements.txt
    - pylint ${CI_PROJECT_DIR}/brewwolf/brewwolf/*.py ${CI_PROJECT_DIR}/brewwolf/rate_beer/*.py

dependenciesCheck:
  image: python:3
  stage: test
  script:
    - pip install safety
    - safety check -r ${CI_PROJECT_DIR}/requirements.txt

securityCheck:
  image: python:3
  stage: test
  script:
    - pip install bandit
    - bandit ${CI_PROJECT_DIR}/brewwolf/brewwolf/*.py ${CI_PROJECT_DIR}/brewwolf/rate_beer/*.py

docker-build:
  only:
    - master
  services:
    - docker:dind
  image: docker:latest
  stage: build
  dependencies:
    - securityCheck
    - pylint
    - dependenciesCheck
  script:
    - docker build -t brewwolf .
    - docker tag brewwolf us.gcr.io/brew-wolf/app:${CI_COMMIT_REF_NAME}
    - echo ${SERVICEACCOUNT} | base64 -d > serviceaccount.json
    - docker login -u _json_key -p "$(cat serviceaccount.json)"  https://us.gcr.io/
    - docker push us.gcr.io/brew-wolf/app:${CI_COMMIT_REF_NAME}
